[{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Code of Conduct","title":"Code of Conduct","text":"abide CU code conduct part association University Colorado Anshutz Medical Campus. Additionally, follow Contributor Covenant Code Conduct, found .","code":""},{"path":[]},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socioeconomic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement. Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement. Please open new security advisory notice (using defaults “n/” unable fill form) privately notify us incidents nature. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://seandavi.github.io/programets/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":"https://seandavi.github.io/programets/DEVELOPER.html","id":"development-setup","dir":"","previous_headings":"","what":"Development setup","title":"Developer notes","text":"Add following .Renviron file: set GARGLE_ENCRYPTION_KEY environment variable, used encrypt decrypt google service account json file.","code":"GARGLE_ENCRYPTION_KEY = \"your_key_here\""},{"path":"https://seandavi.github.io/programets/DEVELOPER.html","id":"encrypting-the-google-service-account-json-file","dir":"","previous_headings":"","what":"Encrypting the google service account json file","title":"Developer notes","text":"section just describes set service account file encryption. need . google service account json file contains sensitive information, private key, stored repository. protect information, encrypt json file using gargle package. follow documentation https://gargle.r-lib.org/articles/managing-tokens-securely.html encrypt google service account json file. Step 1: Create key encryption {r} library(gargle) key = gargle::secret_make_key() key Step 2: Store key environment variable Store key environment variable. can adding environment variable .Renviron file. open file, usethis::edit_r_environ(). Add following line file: Step 3: Encrypt google service account json file {r} gargle::secret_encrypt_json(   path = \"path//ga4-acess-keyfile.json\",   key = \"GARGLE_ENCRYPTION_KEY\",   output = \"inst/secret/ga4-acess-keyfile.json\" ) create encrypted version json file inst/secret directory. Step 4: Use encrypted file code {r} library(gargle) googleAnalyticsR::ga_auth(   json_file = gargle::secret_decrypt_json(     path = system.file(\"secret/ga4-acess-keyfile.json\", package = \"programets\"),     key = \"GARGLE_ENCRYPTION_KEY\"   ) )","code":"GARGLE_ENCRYPTION_KEY = \"your_key_here\""},{"path":"https://seandavi.github.io/programets/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 programets authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"core-goals-of-an-open-source-project-website","dir":"Articles","previous_headings":"","what":"Core Goals of an Open Source Project Website","title":"Using google analytics effectively","text":"Increase Awareness & Adoption: Get people know use software. Provide Support: Offer clear documentation help resources. Build Community: Encourage interaction, contributions, feedback. Showcase Project Health & Activity: Demonstrate ongoing development value.","code":""},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"appropriate-ga4-metrics-dimensions","dir":"Articles","previous_headings":"","what":"Appropriate GA4 Metrics & Dimensions","title":"Using google analytics effectively","text":"’s breakdown, categorized goal: Views (filtered documentation pages): often specific documentation sections viewed? Average Engagement Time per Session/Page (filtered): users spending time reading docs, quickly leaving? Event Count (view_search_results): using site’s search docs, often used? (Enhanced Measurement) Scrolls (filtered documentation pages): users scrolling long documentation pages? (Enhanced Measurement) Page Path Screen Class: specific documentation pages viewed. Search Term: users searching site? (Requires setup) Session Source / Medium: users arriving specific channels engage docs? Code Repositories (GitHub, GitLab, etc.) - Custom Event like view_repository recommended. Issue Trackers - Custom Event like view_issues recommended. Community Forums/Chat (Discourse, Slack, Discord) - Custom Event like join_community recommended. Contribution Guides - Can tracked via Views, custom event view_contribution_guide. Conversions (based custom events): Mark key community link clicks conversions. Page Path Screen Class: pages driving clicks community resources? (e.g., “Contribute” page). Outbound Link URL: specific external URL clicked (useful using custom events, though less precise). Session Source / Medium: certain channels bringing potential contributors? Views (filtered Blog/News/Release Notes): often updates read? Average Engagement Time per Session/Page (filtered): users reading content? Users / New Users: Overall site growth indicates project interest. Page Path Screen Class: specific blog posts release notes popular? Session Source / Medium: people finding updates? Engagement Rate: Percentage sessions lasted longer 10 seconds, conversion event, 2+ page views. Indicates quality visits. Average Engagement Time per Session: Overall time users actively engaged. Browser: Technical dimension compatibility checks. Operating System: Technical dimension. Language: User’s browser language.","code":""},{"path":[]},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"providing-support-documentation","dir":"Articles","previous_headings":"","what":"Providing Support (Documentation)","title":"Using google analytics effectively","text":"Views (filtered documentation pages): often specific documentation sections viewed? Average Engagement Time per Session/Page (filtered): users spending time reading docs, quickly leaving? Event Count (view_search_results): using site’s search docs, often used? (Enhanced Measurement) Scrolls (filtered documentation pages): users scrolling long documentation pages? (Enhanced Measurement) Page Path Screen Class: specific documentation pages viewed. Search Term: users searching site? (Requires setup) Session Source / Medium: users arriving specific channels engage docs?","code":""},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"building-community-contributions","dir":"Articles","previous_headings":"","what":"Building Community & Contributions","title":"Using google analytics effectively","text":"Code Repositories (GitHub, GitLab, etc.) - Custom Event like view_repository recommended. Issue Trackers - Custom Event like view_issues recommended. Community Forums/Chat (Discourse, Slack, Discord) - Custom Event like join_community recommended. Contribution Guides - Can tracked via Views, custom event view_contribution_guide. Conversions (based custom events): Mark key community link clicks conversions. Page Path Screen Class: pages driving clicks community resources? (e.g., “Contribute” page). Outbound Link URL: specific external URL clicked (useful using custom events, though less precise). Session Source / Medium: certain channels bringing potential contributors?","code":""},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"showcasing-project-health-activity","dir":"Articles","previous_headings":"","what":"Showcasing Project Health & Activity","title":"Using google analytics effectively","text":"Views (filtered Blog/News/Release Notes): often updates read? Average Engagement Time per Session/Page (filtered): users reading content? Users / New Users: Overall site growth indicates project interest. Page Path Screen Class: specific blog posts release notes popular? Session Source / Medium: people finding updates?","code":""},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"general-engagement-technical","dir":"Articles","previous_headings":"","what":"General Engagement & Technical","title":"Using google analytics effectively","text":"Engagement Rate: Percentage sessions lasted longer 10 seconds, conversion event, 2+ page views. Indicates quality visits. Average Engagement Time per Session: Overall time users actively engaged. Browser: Technical dimension compatibility checks. Operating System: Technical dimension. Language: User’s browser language.","code":""},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"important-considerations","dir":"Articles","previous_headings":"","what":"Important Considerations","title":"Using google analytics effectively","text":"Custom Events Key: GA4’s automatic tracking good, must set custom events (e.g., via Google Tag Manager) track crucial actions like downloads, clicks GitHub/issue tracker, etc. Mark Conversions: Identify important events (like download, view_repository) mark conversions GA4 interface. makes reporting key goals much easier. Filters & Segments: Use GA4’s “Explore” section heavily. Create reports filtered specific page paths (e.g., /docs/, /blog/) user segments (e.g., users specific countries, users downloaded software).","code":""},{"path":"https://seandavi.github.io/programets/articles/effective_google_analytics.html","id":"good-plots-and-tables-for-summarization","dir":"Articles","previous_headings":"","what":"Good Plots and Tables for Summarization","title":"Using google analytics effectively","text":"Table: Sessions, Users, New Users, Engagement Rate, Conversions (Downloads) Session Source / Medium. (Shows effectiveness channels). Time Series Chart: Users New Users time (daily/weekly). (Shows growth trends). Pie Chart: New vs. Returning Users. (Shows audience composition). Geo Map: Users Country. (Shows geographic reach). Table: Top Pages (Page Path Screen Class) Views, Users, Average Engagement Time, Scrolls, Event Count (download key actions initiated page). (Shows popular/effective content). Table: Top Landing Pages (Landing Page + query string) Sessions, Engagement Rate, Conversions (Downloads). (Shows effective entry points). Table (Filtered Blog/News): Pages Views, Average Engagement Time. (Shows blog performance). Time Series Chart: download Event Count time. (Shows download trends). Table: download Event Count (Conversions) Session Source / Medium. (Shows channels drive downloads). Table: download Event Count (Conversions) Landing Page + query string. (Shows entry pages lead downloads). Table: download Event Count (Conversions) Country. Table (Filtered /docs/ path): Top Documentation Pages Views, Average Engagement Time, Scrolls. (Shows used/engaging docs). Table: Search Term Usage Count. (Shows users looking ). Table: Event Count view_repository, view_issues, join_community etc. Session Source / Medium. (Shows channels driving community engagement). Table: Event Count custom events Page Path (Shows pages drive actions, e.g., “Contribute” page effectiveness). (Advanced): Funnel Exploration report showing users moving viewing contribution page -> clicking repository link. Pie Chart: Users Device Category. Table: Users Browser Operating System. (Useful identifying potential compatibility issues specific tech groups low engagement).","code":""},{"path":"https://seandavi.github.io/programets/articles/googleanalytics.html","id":"what-is-google-analytics","dir":"Articles","previous_headings":"","what":"What is Google Analytics?","title":"Google Analytics","text":"Google Analytics web analytics service offered Google tracks reports website traffic. currently platform Google Marketing Platform brand. Google Analytics widely used web analytics service web. powerful tool provides insights users interact website, allowing make data-driven decisions improve user experience optimize marketing efforts. Google Analytics 4 (GA4) latest version Google Analytics, focuses event-based tracking provides advanced features analyzing user behavior across different platforms.","code":""},{"path":"https://seandavi.github.io/programets/articles/googleanalytics.html","id":"the-googleanalyticsr-package","dir":"Articles","previous_headings":"","what":"The googleAnalyticsR package","title":"Google Analytics","text":"googleAnalyticsR package R client Google Analytics API. allows access analyze Google Analytics data directly R, making easier integrate web analytics data analysis workflow. package provides functions authenticate Google account, retrieve data Google Analytics, perform various analyses data.","code":""},{"path":"https://seandavi.github.io/programets/articles/googleanalytics.html","id":"getting-started-with-googleanalyticsr","dir":"Articles","previous_headings":"","what":"Getting started with googleAnalyticsR","title":"Google Analytics","text":"resulting res object contain data specified date range, metrics, dimensions. can view first rows data using head() function.","code":"library(googleAnalyticsR) library(programets) ga_auth(email = \"seandavi@gmail.com\") #> ℹ Authenticating using ga4-api-accessor@bioconductor-ga4-home.iam.gserviceaccount.com account_list <- ga_account_list(\"ga4\")  ## account_list will have a column called \"propertyId\" account_list$propertyId #> [1] \"388188354\"  ## View account_list and pick the one that you want to use ## In this case, we will use Bioconductor ga_id <- 388188354 library(lubridate) #>  #> Attaching package: 'lubridate' #> The following objects are masked from 'package:base': #>  #>     date, intersect, setdiff, union  start_date <- Sys.Date() - 365 end_date <- Sys.Date() - 1   daily_user_country_data <- ga_data(     propertyId = ga_id,     dimensions = c(\"date\", \"newVsReturning\", \"country\"), # Added dimensions     metrics = c(\"activeUsers\", \"sessions\"), # Example metrics     date_range = c(start_date, end_date),     limit = -1 ) #> ℹ 2025-10-28 14:23:39.580382 > Downloaded [ 82236 ] of total [ 82236 ] rows library(ggplot2) library(zoo) #>  #> Attaching package: 'zoo' #> The following objects are masked from 'package:base': #>  #>     as.Date, as.Date.numeric library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # Group by user type and country, then calculate rolling average moving_avg_data <- daily_user_country_data |>     arrange(date) |>     group_by(newVsReturning, country) |>     mutate(         activeUsers_7day_avg = rollmean(activeUsers, k = 7, fill = NA, align = \"right\"),         sessions_7day_avg = rollmean(sessions, k = 7, fill = NA, align = \"right\")     ) |>     ungroup()  # Let's see the results head(moving_avg_data) #> # A tibble: 6 × 7 #>   date       newVsReturning country    activeUsers sessions activeUsers_7day_avg #>   <date>     <chr>          <chr>            <dbl>    <dbl>                <dbl> #> 1 2024-10-28 returning      United St…        1159     1624                   NA #> 2 2024-10-28 new            United St…         968      967                   NA #> 3 2024-10-28 returning      China              800     1184                   NA #> 4 2024-10-28 new            China              700      701                   NA #> 5 2024-10-28 returning      United Ki…         203      276                   NA #> 6 2024-10-28 returning      Germany            199      264                   NA #> # ℹ 1 more variable: sessions_7day_avg <dbl>  # Plot the moving average for active users moving_avg_data |>     group_by(date, newVsReturning) |>     summarise(activeUsers_7day_avg = sum(activeUsers_7day_avg, na.rm = TRUE)) |>     ggplot(aes(x = date, y = activeUsers_7day_avg, color = newVsReturning)) +     geom_line() +     labs(         title = \"7-Day Moving Average of Active Users\",         x = \"Date\",         y = \"Active Users (7-day avg)\"     ) +     theme_minimal() #> `summarise()` has grouped output by 'date'. You can override using the #> `.groups` argument."},{"path":"https://seandavi.github.io/programets/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sean Davis. Author, maintainer. David Mayer. Author.","code":""},{"path":"https://seandavi.github.io/programets/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davis S, Mayer D (2025). programets: Collect analyze academic impact metrics various sources. R package version 0.3.0, https://nih-cfde.github.io/programets/.","code":"@Manual{,   title = {programets: Collect and analyze academic impact metrics from various sources},   author = {Sean Davis and David Mayer},   year = {2025},   note = {R package version 0.3.0},   url = {https://nih-cfde.github.io/programets/}, }"},{"path":"https://seandavi.github.io/programets/index.html","id":"programets","dir":"","previous_headings":"","what":"Collect and analyze academic impact metrics from various sources","title":"Collect and analyze academic impact metrics from various sources","text":"programets R package collecting analyzing academic impact metrics NIH-funded research projects. aggregates data multiple public sources help researchers, program managers, evaluators understand projects engage broader research community time.","code":""},{"path":"https://seandavi.github.io/programets/index.html","id":"what-does-it-do","dir":"","previous_headings":"","what":"What Does It Do?","title":"Collect and analyze academic impact metrics from various sources","text":"package provides unified access : NIH RePORTER - Project metadata, funding details, associated publications iCite - Citation metrics including Relative Citation Ratio (RCR) PubMed publications GitHub - Repository metrics (stars, forks, commits, contributors, issues, PRs) projects tagged NIH Core Project Numbers Google Analytics - Web traffic engagement data project websites Europe PMC - Literature search across millions publications","code":""},{"path":"https://seandavi.github.io/programets/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Collect and analyze academic impact metrics from various sources","text":"Install development version GitHub: Requirements: - R >= 4.1.0 - GitHub data: Personal Access Token recommended higher rate limits","code":"# install.packages(\"pak\") pak::pak(\"nih-cfde/programets\")"},{"path":[]},{"path":"https://seandavi.github.io/programets/index.html","id":"id_1-query-nih-reporter-for-project-information","dir":"","previous_headings":"Quick Start","what":"1. Query NIH RePORTER for Project Information","title":"Collect and analyze academic impact metrics from various sources","text":"Retrieve comprehensive project metadata including publications, funding details, principal investigators: Available fields include: project title, abstract, funding amounts, dates, PIs, publications (PMIDs), .","code":"library(programets)  # Get project info for one or more NIH Core Project Numbers proj_info <- get_core_project_info(c(\"u24ca289073\")) proj_info |> colnames() #>  [1] \"core_project_num\"         \"found_publication\"        #>  [3] \"appl_id\"                  \"subproject_id\"            #>  [5] \"fiscal_year\"              \"project_num\"              #>  [7] \"project_serial_num\"       \"organization\"             #>  [9] \"award_type\"               \"activity_code\"            #> [11] \"is_active\"                \"project_num_split\"        #> [13] \"principal_investigators\"  \"contact_pi_name\"          #> [15] \"program_officers\"         \"agency_ic_admin\"          #> [17] \"agency_ic_fundings\"       \"cong_dist\"                #> [19] \"spending_categories\"      \"project_start_date\"       #> [21] \"project_end_date\"         \"organization_type\"        #> [23] \"geo_lat_lon\"              \"opportunity_number\"       #> [25] \"full_study_section\"       \"award_notice_date\"        #> [27] \"is_new\"                   \"mechanism_code_dc\"        #> [29] \"terms\"                    \"pref_terms\"               #> [31] \"abstract_text\"            \"project_title\"            #> [33] \"phr_text\"                 \"spending_categories_desc\" #> [35] \"agency_code\"              \"covid_response\"           #> [37] \"arra_funded\"              \"budget_start\"             #> [39] \"budget_end\"               \"cfda_code\"                #> [41] \"funding_mechanism\"        \"direct_cost_amt\"          #> [43] \"indirect_cost_amt\"        \"project_detail_url\"       #> [45] \"date_added\"               \"pmid\"                     #> [47] \"pubmed_url\""},{"path":"https://seandavi.github.io/programets/index.html","id":"id_2-get-github-repository-metrics","dir":"","previous_headings":"Quick Start","what":"2. Get GitHub Repository Metrics","title":"Collect and analyze academic impact metrics from various sources","text":"project repositories tagged NIH Core Project Numbers topics, can collect engagement metrics: Metrics include: stars, watchers, forks, open/closed issues, open/closed PRs, commit count, contributor count, . Tip: Tag GitHub repositories NIH Core Project Number (e.g., u24ca289073) enable discovery.","code":"# Fetch GitHub metrics for repos tagged with your project number df <- get_github_by_topic(c(\"u24ca289073\")) #> ! No GitHub token provided. Running without authentication #> ℹ Use of a Personal Access Token (PAT)is recommended for increased rate limits. Create a token with: usethis::create_github_token() #> This message is displayed once every 8 hours. df |> colnames() #>  [1] \"name\"          \"owner\"         \"description\"   \"stars\"         #>  [5] \"watchers\"      \"forks\"         \"open_issues\"   \"open_prs\"      #>  [9] \"closed_issues\" \"closed_prs\"    \"commits\"       \"contributors\"  #> [13] \"tags\"          \"language\"      \"license\"       \"created_at\"    #> [17] \"pushed_at\"     \"updated_at\"    \"html_url\""},{"path":"https://seandavi.github.io/programets/index.html","id":"id_3-get-citation-metrics-from-icite","dir":"","previous_headings":"Quick Start","what":"3. Get Citation Metrics from iCite","title":"Collect and analyze academic impact metrics from various sources","text":"Calculate impact metrics including Relative Citation Ratio (RCR) publications:","code":"# Get citation metrics for PubMed IDs pmids <- c(26001965, 25015380) citation_data <- icite(pmids)  # View RCR and other metrics dplyr::select(citation_data, pmid, title, year,                relative_citation_ratio, citation_count)"},{"path":"https://seandavi.github.io/programets/index.html","id":"id_4-search-europe-pmc-for-publications","dir":"","previous_headings":"Quick Start","what":"4. Search Europe PMC for Publications","title":"Collect and analyze academic impact metrics from various sources","text":"Query millions publications flexible search syntax:","code":"# Search for publications related to CRISPR crispr_pubs <- epmc_search(query = \"crispr\", page_limit = 2)  # Search by author author_pubs <- epmc_search(query = 'AUTH:\"Smith J\"', page_limit = 1)"},{"path":"https://seandavi.github.io/programets/index.html","id":"id_5-access-google-analytics-data","dir":"","previous_headings":"Quick Start","what":"5. Access Google Analytics Data","title":"Collect and analyze academic impact metrics from various sources","text":"Retrieve web traffic data project websites (requires authentication):","code":"# Authenticate with Google (first time only) googleAnalyticsR::ga_auth()  # Get traffic data traffic <- ga_dataframe(   property_id = \"123456789\",   start_date = \"2024-01-01\",   end_date = \"2024-12-31\",   metrics = c(\"activeUsers\", \"sessions\"),   dimensions = c(\"date\", \"country\") )"},{"path":[]},{"path":"https://seandavi.github.io/programets/index.html","id":"github","dir":"","previous_headings":"Authentication","what":"GitHub","title":"Collect and analyze academic impact metrics from various sources","text":"increased API rate limits, set Personal Access Token:","code":"# Create a token with: usethis::create_github_token() # Then use it in your calls: df <- get_github_by_topic(c(\"u24ca289073\"), token = \"your_token_here\")"},{"path":"https://seandavi.github.io/programets/index.html","id":"google-analytics","dir":"","previous_headings":"Authentication","what":"Google Analytics","title":"Collect and analyze academic impact metrics from various sources","text":"First-time setup requires authentication:","code":"# Opens browser for Google account authorization googleAnalyticsR::ga_auth()  # For non-interactive use, see DEVELOPER.md for service account setup"},{"path":"https://seandavi.github.io/programets/index.html","id":"use-cases","dir":"","previous_headings":"","what":"Use Cases","title":"Collect and analyze academic impact metrics from various sources","text":"Impact Reporting: Generate comprehensive reports combining publication citations, web traffic, GitHub engagement Trend Analysis: Track metrics evolve time response publications, presentations, events Portfolio Management: Compare metrics across multiple projects funding opportunities Compliance: Document project outputs community engagement progress reports","code":""},{"path":"https://seandavi.github.io/programets/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Collect and analyze academic impact metrics from various sources","text":"Function Reference: See ?get_core_project_info, ?icite, ?get_github_by_topic, etc. Vignettes: Browse vignettes detailed workflows Developer Notes: See DEVELOPER.md advanced setup (service accounts, encryption)","code":""},{"path":"https://seandavi.github.io/programets/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Collect and analyze academic impact metrics from various sources","text":"File issues : https://github.com/nih-cfde/programets/issues Review examples vignettes Check function documentation ?function_name","code":""},{"path":"https://seandavi.github.io/programets/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Collect and analyze academic impact metrics from various sources","text":"Sean Davis (seandavi@gmail.com) David Mayer (david.mayer@cuanschutz.edu)","code":""},{"path":"https://seandavi.github.io/programets/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Collect and analyze academic impact metrics from various sources","text":"MIT","code":""},{"path":"https://seandavi.github.io/programets/reference/epmc_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Europe PMC for publications — epmc_search","title":"Search Europe PMC for publications — epmc_search","text":"function queries Europe PMC REST API using provided search string. handles pagination using cursor returns tibble search results.","code":""},{"path":"https://seandavi.github.io/programets/reference/epmc_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Europe PMC for publications — epmc_search","text":"","code":"epmc_search(query, page_limit = 10, delay = 1)"},{"path":"https://seandavi.github.io/programets/reference/epmc_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Europe PMC for publications — epmc_search","text":"query character string representing search query Europe PMC. See https://europepmc.org/Help query syntax. page_limit integer specifying maximum number pages retrieve. Defaults 10. Set Inf retrieve pages (use caution). delay integer delay API calls. Defaults 1.","code":""},{"path":"https://seandavi.github.io/programets/reference/epmc_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Europe PMC for publications — epmc_search","text":"tibble row represents publication. Columns include: id Publication ID source Source publication (e.g., \"MED\", \"PMC\") pmid PubMed ID pmcid PubMed Central ID doi Digital Object Identifier title Title publication authorString String authors journalTitle Title journal issue Journal issue journalVolume Journal volume pubYear Year publication journalIssn Journal ISSN pageInfo Page information pubType Type publication (e.g., \"journal article\", \"review\") isOpenAccess Whether publication open access (\"OA\" \"N/\") inEPMC Whether publication EPMC (\"Y\" \"N/\") inPMC Whether publication PMC (\"Y\" \"N/\") hasPDF Whether PDF available (\"Y\" \"N/\") hasBook Whether book (\"Y\" \"N/\") citedByCount Number citations hasReferences Whether references available (\"Y\" \"N/\") hasTextMinedTerms Whether text-mined terms available (\"Y\" \"N/\") hasDbCrossReferences Whether database cross-references available (\"Y\" \"N/\") hasLabsLinks Whether Labs links available (\"Y\" \"N/\") hasTMAccessionNumbers Whether TM accession numbers available (\"Y\" \"N/\") firstPublicationDate Date first publication","code":""},{"path":"https://seandavi.github.io/programets/reference/epmc_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Europe PMC for publications — epmc_search","text":"","code":"if (FALSE) { # \\dontrun{   # Search for publications related to \"crispr\"   crispr_results <- epmc_search(query = \"crispr\")   dplyr::glimpse(crispr_results)    # Search for publications by a specific author   author_results <- epmc_search(query = \"AUTH:\\\"Smith J\\\"\")   dplyr::glimpse(author_results) } # }"},{"path":"https://seandavi.github.io/programets/reference/ga_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Get google analytics data as a dataframe — ga_dataframe","title":"Get google analytics data as a dataframe — ga_dataframe","text":"function retrieves Google Analytics data returns dataframe.","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get google analytics data as a dataframe — ga_dataframe","text":"","code":"ga_dataframe(property_id, start_date, end_date, metrics, dimensions)"},{"path":"https://seandavi.github.io/programets/reference/ga_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get google analytics data as a dataframe — ga_dataframe","text":"property_id Google Analytics Property ID (e.g., \"2839410283\"). start_date start date data retrieval (e.g., \"2023-01-01\"). end_date end date data retrieval (e.g., \"2023-01-31\"). metrics metrics retrieve (e.g., \"ga:sessions,ga:pageviews\"). dimensions dimensions retrieve (e.g., \"ga:date,ga:source\").","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get google analytics data as a dataframe — ga_dataframe","text":"dataframe containing Google Analytics data.","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_meta_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Google analytics metadata dataframe — ga_meta_simple","title":"Google analytics metadata dataframe — ga_meta_simple","text":"function retrieves Google Analytics metadata returns dataframe. metadata includes information metrics, dimensions, attributes available Google Analytics.","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_meta_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google analytics metadata dataframe — ga_meta_simple","text":"","code":"ga_meta_simple()"},{"path":"https://seandavi.github.io/programets/reference/ga_meta_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google analytics metadata dataframe — ga_meta_simple","text":"tibble containing Google Analytics metadata.","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_meta_simple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google analytics metadata dataframe — ga_meta_simple","text":"function wrapper around googleAnalyticsR::ga_meta() function. retrieves metadata Google Analytics API version 4.","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_meta_simple.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Google analytics metadata dataframe — ga_meta_simple","text":"function requires first authenticating Google Analytics using ga_auth() function.","code":""},{"path":[]},{"path":"https://seandavi.github.io/programets/reference/ga_meta_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google analytics metadata dataframe — ga_meta_simple","text":"","code":"if (FALSE) { # \\dontrun{ res = ga_meta_simple() head(res) dplyr::glimpse(res) } # }"},{"path":"https://seandavi.github.io/programets/reference/ga_query_explorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse google analytics query explorer — ga_query_explorer","title":"Browse google analytics query explorer — ga_query_explorer","text":"function opens Google Analytics Query Explorer web browser.","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_query_explorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse google analytics query explorer — ga_query_explorer","text":"","code":"ga_query_explorer()"},{"path":"https://seandavi.github.io/programets/reference/ga_query_explorer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Browse google analytics query explorer — ga_query_explorer","text":"allows users explore test Google Analytics queries interactively. useful developers analysts want experiment different queries see results real-time.","code":""},{"path":"https://seandavi.github.io/programets/reference/ga_query_explorer.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Browse google analytics query explorer — ga_query_explorer","text":"function intended users Google Analytics account want explore API capabilities. return data perform analysis. need Google account google analytics access prompted log already.","code":""},{"path":[]},{"path":"https://seandavi.github.io/programets/reference/ga_query_explorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Browse google analytics query explorer — ga_query_explorer","text":"","code":"if (FALSE) { # \\dontrun{ ga_query_explorer() } # }"},{"path":"https://seandavi.github.io/programets/reference/get_core_project_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Core Project Info — get_core_project_info","title":"Get Core Project Info — get_core_project_info","text":"Given NIH Core Project Number(s), function retrieves project metadata including assosciated publications NIH RePORTER API.","code":""},{"path":"https://seandavi.github.io/programets/reference/get_core_project_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Core Project Info — get_core_project_info","text":"","code":"get_core_project_info(core_project_numbers)"},{"path":"https://seandavi.github.io/programets/reference/get_core_project_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Core Project Info — get_core_project_info","text":"core_project_numbers character vector core project numbers.","code":""},{"path":"https://seandavi.github.io/programets/reference/get_core_project_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Core Project Info — get_core_project_info","text":"tibble containing following columns: core_project_num core project number. found_publication logical indicating whether publications found core project number. appl_id application ID associated publication. pmid PubMed ID associated publication. pubmed_url URL PubMed page publication. subproject_id subproject ID associated publication. fiscal_year fiscal year associated publication. project_num project number associated publication. project_serial_num project serial number associated publication. organization organization associated publication. award_type award type associated publication. activity_code activity code associated publication. is_active logical indicating whether project active. project_num_split project number split associated publication. principal_investigators principal investigators associated publication. contact_pi_name contact PI name associated publication. program_officers program officers associated publication. agency_ic_admin agency IC admin associated publication. agency_ic_fundings agency IC fundings associated publication. cong_dist congressional district associated publication. spending_categories spending categories associated publication. project_start_date project start date associated publication. project_end_date project end date associated publication. organization_type organization type associated publication. geo_lat_lon geographic latitude longitude associated publication. opportunity_number opportunity number associated publication. full_study_section full study section associated publication. award_notice_date award notice date associated publication. is_new logical indicating whether project new. mechanism_code_dc mechanism code DC associated publication. terms terms associated publication. pref_terms preferred terms associated publication. abstract_text abstract text associated publication. project_title project title associated publication. phr_text PHR text associated publication. spending_categories_desc spending categories description associated publication. agency_code agency code associated publication. covid_response COVID response associated publication. arra_funded ARRA funded associated publication. budget_start budget start associated publication. budget_end budget end associated publication. cfda_code CFDA code associated publication. funding_mechanism funding mechanism associated publication. direct_cost_amt direct cost amount associated publication. indirect_cost_amt indirect cost amount associated publication. project_detail_url project detail URL associated publication. date_added date added associated publication.","code":""},{"path":"https://seandavi.github.io/programets/reference/get_core_project_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Core Project Info — get_core_project_info","text":"","code":"# Get publications for a set of core project numbers proj_info <- get_core_project_info(c(\"OT2OD030545\", \"99999999\")) # View the results proj_info #> # A tibble: 16 × 47 #>    core_project_num found_publication appl_id  subproject_id fiscal_year #>    <chr>            <lgl>             <chr>    <chr>               <int> #>  1 OT2OD030545      TRUE              10907962 NA                   2023 #>  2 OT2OD030545      TRUE              10907962 NA                   2023 #>  3 OT2OD030545      TRUE              10907962 NA                   2023 #>  4 OT2OD030545      TRUE              10907962 NA                   2023 #>  5 OT2OD030545      TRUE              10907962 NA                   2023 #>  6 OT2OD030545      TRUE              10907962 NA                   2023 #>  7 OT2OD030545      TRUE              10907962 NA                   2023 #>  8 OT2OD030545      TRUE              10907962 NA                   2023 #>  9 OT2OD030545      TRUE              10907962 NA                   2023 #> 10 OT2OD030545      TRUE              10907962 NA                   2023 #> 11 OT2OD030545      NA                10683509 NA                   2022 #> 12 OT2OD030545      NA                10707603 NA                   2022 #> 13 OT2OD030545      NA                10468526 NA                   2021 #> 14 OT2OD030545      NA                10444351 NA                   2021 #> 15 OT2OD030545      NA                10217839 NA                   2020 #> 16 99999999         FALSE             NA       NA                     NA #> # ℹ 42 more variables: project_num <chr>, project_serial_num <chr>, #> #   organization <list>, award_type <chr>, activity_code <chr>, #> #   is_active <lgl>, project_num_split <list>, principal_investigators <list>, #> #   contact_pi_name <chr>, program_officers <list>, agency_ic_admin <list>, #> #   agency_ic_fundings <list>, cong_dist <chr>, spending_categories <chr>, #> #   project_start_date <chr>, project_end_date <chr>, organization_type <list>, #> #   geo_lat_lon <list>, opportunity_number <chr>, full_study_section <list>, …"},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GitHub Repositories by Topic — get_github_by_topic","title":"Get GitHub Repositories by Topic — get_github_by_topic","text":"Get GitHub Repositories Topic","code":""},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GitHub Repositories by Topic — get_github_by_topic","text":"","code":"get_github_by_topic(topics, token = NULL, limit = 30)"},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GitHub Repositories by Topic — get_github_by_topic","text":"topics vector GitHub topics search . token GitHub personal access token. provided, function run without authentication. limit maximum number results return. Defaults 30.","code":""},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GitHub Repositories by Topic — get_github_by_topic","text":"data frame containing results search query.","code":""},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GitHub Repositories by Topic — get_github_by_topic","text":"","code":"topics <- c(\"u24ca289073\") df <- get_github_by_topic(topics, limit = 5) #> ! No GitHub token provided. Running without authentication #> ℹ Use of a Personal Access Token (PAT)is recommended for increased rate limits. Create a token with: usethis::create_github_token() #> This message is displayed once every 8 hours. head(df) #> # A tibble: 5 × 19 #>   name               owner description stars watchers forks open_issues open_prs #>   <chr>              <chr> <chr>       <dbl>    <dbl> <dbl>       <dbl>    <dbl> #> 1 awesome-cancer-va… sean… A communit…   318       30    74           1        0 #> 2 MultiAssayExperim… wald… Bioconduct…    71       14    34           1        0 #> 3 SpatialExperiment  drig… NA             71        7    21          29        5 #> 4 BiocParallel       Bioc… Bioconduct…    68       16    31          29        1 #> 5 HGNChelper         wald… Identify a…    59        5    10           4        0 #> # ℹ 11 more variables: closed_issues <dbl>, closed_prs <dbl>, commits <dbl>, #> #   contributors <dbl>, tags <chr>, language <chr>, license <chr>, #> #   created_at <chr>, pushed_at <chr>, updated_at <chr>, html_url <chr> dplyr::glimpse(df) #> Rows: 5 #> Columns: 19 #> $ name          <chr> \"awesome-cancer-variant-resources\", \"MultiAssayExperimen… #> $ owner         <chr> \"seandavi\", \"waldronlab\", \"drighelli\", \"Bioconductor\", \"… #> $ description   <chr> \"A community-maintained repository of cancer clinical kn… #> $ stars         <dbl> 318, 71, 71, 68, 59 #> $ watchers      <dbl> 30, 14, 7, 16, 5 #> $ forks         <dbl> 74, 34, 21, 31, 10 #> $ open_issues   <dbl> 1, 1, 29, 29, 4 #> $ open_prs      <dbl> 0, 0, 5, 1, 0 #> $ closed_issues <dbl> 2, 268, 69, 150, 13 #> $ closed_prs    <dbl> 5, 64, 70, 102, 6 #> $ commits       <dbl> 45, 1807, 484, 793, 150 #> $ contributors  <dbl> 4, 19, 15, 21, 4 #> $ tags          <chr> \"awesome-list, bioinformatics, cancer, cancer-genomics, … #> $ language      <chr> NA, \"R\", \"R\", \"R\", \"R\" #> $ license       <chr> \"MIT License\", NA, NA, \"Other\", NA #> $ created_at    <chr> \"2016-07-07T13:16:14Z\", \"2013-07-22T03:29:27Z\", \"2020-02… #> $ pushed_at     <chr> \"2025-03-06T23:04:53Z\", \"2025-08-18T20:35:26Z\", \"2025-05… #> $ updated_at    <chr> \"2025-09-03T15:24:31Z\", \"2025-10-26T17:41:42Z\", \"2025-10… #> $ html_url      <chr> \"https://github.com/seandavi/awesome-cancer-variant-reso…"},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic_graphql.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GitHub Repositories by Topic (GraphQL API) — get_github_by_topic_graphql","title":"Get GitHub Repositories by Topic (GraphQL API) — get_github_by_topic_graphql","text":"Get GitHub Repositories Topic (GraphQL API)","code":""},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic_graphql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GitHub Repositories by Topic (GraphQL API) — get_github_by_topic_graphql","text":"","code":"get_github_by_topic_graphql(topics, token, limit = 30)"},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic_graphql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GitHub Repositories by Topic (GraphQL API) — get_github_by_topic_graphql","text":"topics vector GitHub topics search . token GitHub personal access token. Required GraphQL API. limit maximum number repositories return per topic (max 1000 GitHub).","code":""},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic_graphql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GitHub Repositories by Topic (GraphQL API) — get_github_by_topic_graphql","text":"data frame repository metadata.","code":""},{"path":"https://seandavi.github.io/programets/reference/get_github_by_topic_graphql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GitHub Repositories by Topic (GraphQL API) — get_github_by_topic_graphql","text":"","code":"if (FALSE) { # \\dontrun{ df <- get_github_by_topic_graphql(c(\"u24ca289073\"), token = \"ghp_yourPAT\") dplyr::glimpse(df) } # }"},{"path":"https://seandavi.github.io/programets/reference/icite.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve icite data including Relative Citation Ratio (RCR) for PubMed IDs. — icite","title":"Retrieve icite data including Relative Citation Ratio (RCR) for PubMed IDs. — icite","text":"Retrieve icite data including Relative Citation Ratio (RCR) PubMed IDs.","code":""},{"path":"https://seandavi.github.io/programets/reference/icite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve icite data including Relative Citation Ratio (RCR) for PubMed IDs. — icite","text":"","code":"icite(pmids)"},{"path":"https://seandavi.github.io/programets/reference/icite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve icite data including Relative Citation Ratio (RCR) for PubMed IDs. — icite","text":"pmids vector PubMed IDs retrieve (max 1000 time)","code":""},{"path":"https://seandavi.github.io/programets/reference/icite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve icite data including Relative Citation Ratio (RCR) for PubMed IDs. — icite","text":"tibble including following variables: pmid PubMed ID authors publication authors citation_count total citations citations_per_year mean citations per year expected_citations_per_year estimated field_citation_rate rate relative field is_research_article boolean journal journal name abbr. nih_percentile percentile relative_citation_ratio RCR title article title year publication year See URL full details.","code":""},{"path":[]},{"path":"https://seandavi.github.io/programets/reference/icite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve icite data including Relative Citation Ratio (RCR) for PubMed IDs. — icite","text":"Sean Davis seandavi@gmail.com","code":""},{"path":"https://seandavi.github.io/programets/reference/icite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve icite data including Relative Citation Ratio (RCR) for PubMed IDs. — icite","text":"","code":"pmids <- c(26001965, 25015380) icite_records <- icite(pmids) dplyr::glimpse(icite_records) #> Rows: 2 #> Columns: 27 #> $ `_id`                       <chr> \"25015380\", \"26001965\" #> $ authors                     <list> [<data.frame[5 x 3]>], [<data.frame[3 x 3]… #> $ doi                         <chr> \"10.1101/gr.174052.114\", \"10.1093/nar/gkv… #> $ pmid                        <int> 25015380, 26001965 #> $ title                       <chr> \"High resolution mapping of modified DNA n… #> $ animal                      <dbl> 0.25, 0.25 #> $ apt                         <dbl> 0.25, 0.05 #> $ human                       <dbl> 0, 0 #> $ citedByPmidsByYear          <list> [<data.frame[75 x 75]>], [<data.frame[39 x… #> $ citedByClinicalArticle      <lgl> FALSE, FALSE #> $ year                        <int> 2014, 2015 #> $ journal                     <chr> \"Genome Res\", \"Nucleic Acids Res\" #> $ is_research_article         <lgl> TRUE, TRUE #> $ citation_count              <int> 75, 39 #> $ field_citation_rate         <dbl> 8.360690, 9.987515 #> $ expected_citations_per_year <dbl> 3.371208, 4.027768 #> $ citations_per_year          <dbl> 6.818182, 3.900000 #> $ relative_citation_ratio     <dbl> 2.0224747, 0.9682782 #> $ nih_percentile              <dbl> 74.9, 49.0 #> $ molecular_cellular          <dbl> 0.75, 0.75 #> $ x_coord                     <dbl> -0.4330127, -0.4330127 #> $ y_coord                     <dbl> -0.5, -0.5 #> $ is_clinical                 <lgl> FALSE, FALSE #> $ cited_by_clin               <lgl> NA, NA #> $ cited_by                    <list> <29785056, 26519467, 30919497, 26411877, 3… #> $ references                  <list> <8223452, 19448611, 21062813, 8092694, 115… #> $ provisional                 <lgl> FALSE, FALSE"}]
